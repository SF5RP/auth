services:
  db:
    image: postgres:16-alpine
    container_name: user-postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: userpassword
      POSTGRES_DB: userdb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: user-service
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: userpassword
      DB_NAME: userdb
      DATABASE_URL: postgres://user:userpassword@db:5432/userdb?sslmode=disable
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      DISCORD_REDIRECT_URI: ${DISCORD_REDIRECT_URI:-http://localhost:8080/callback}
      JWT_SECRET: ${JWT_SECRET:-default-dev-secret}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      SERVER_PORT: 8080
      ENVIRONMENT: development
    ports:
      - "8080:8080"

  migrate:
    build: .
    container_name: user-migrate
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://user:userpassword@db:5432/userdb?sslmode=disable
      MIGRATIONS_PATH: /root/migrations
    entrypoint: ["/root/migrator"]

volumes:
  db_data:
